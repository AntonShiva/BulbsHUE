//
//  LightsViewModel.swift
//  PhilipsHueV2
//
//  Created by Anton Reasin on 28.07.2025.
//

import Foundation
import Combine
import SwiftUI
import CoreGraphics
import Observation
#if canImport(UIKit)
import UIKit
#elseif canImport(AppKit)
import AppKit
#endif

/// ViewModel –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–∞–º–ø–∞–º–∏
/// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫—É –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å API
/// ‚úÖ –û–ë–ù–û–í–õ–ï–ù–û: –ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞ @Observable –¥–ª—è –ª—É—á—à–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
@MainActor
@Observable
class LightsViewModel {
    
    // MARK: - Observable Properties
    
    /// ‚úÖ –û–ë–ù–û–í–õ–ï–ù–û: –£–±—Ä–∞–ª–∏ @Published - @Observable –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    /// –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ª–∞–º–ø –≤ —Å–∏—Å—Ç–µ–º–µ
    var lights: [Light] = [] {
        didSet {
            updateLightsDictionary()
        }
    }
    
    /// –°–ª–æ–≤–∞—Ä—å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ –ª–∞–º–ø –ø–æ ID
    internal var lightsDict: [String: Int] = [:]
    
    /// –§–ª–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    var isLoading: Bool = false
    
    /// –¢–µ–∫—É—â–∞—è –æ—à–∏–±–∫–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    var error: Error?
    
    /// –í—ã–±—Ä–∞–Ω–Ω–∞—è –ª–∞–º–ø–∞ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    var selectedLight: Light?
    
    /// –§–∏–ª—å—Ç—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ª–∞–º–ø
    var filter: LightFilter = .all
    
    /// –õ–∞–º–ø—ã –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø–æ —Å–µ—Ä–∏–π–Ω–æ–º—É –Ω–æ–º–µ—Ä—É (–æ—Ç–¥–µ–ª—å–Ω–æ –æ—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞)
    var serialNumberFoundLights: [Light] = []
    
    /// –õ–∞–º–ø—ã –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ —Å–µ—Ç–µ–≤–æ–π –ø–æ–∏—Å–∫ (v1 scan)
    var networkFoundLights: [Light] = []
    
    // MARK: - Internal Properties
    
    /// –ö–ª–∏–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API
    internal let apiClient: HueAPIClient
    
    /// –ù–∞–±–æ—Ä –ø–æ–¥–ø–∏—Å–æ–∫ Combine
    internal var cancellables = Set<AnyCancellable>()
    
    /// –°—á–µ—Ç—á–∏–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø–µ—Ä–µ–≥—Ä—É–∑–∫–∏
    internal var activeRequests = 0
    internal let maxActiveRequests = 5
    
    /// –¢–∞–π–º–µ—Ä –¥–ª—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (—É—Å—Ç–∞—Ä–µ–≤—à–∏–π –ø–æ–¥—Ö–æ–¥)
    internal var refreshTimer: Timer?
    
    /// –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –ø–æ—Ç–æ–∫ —Å–æ–±—ã—Ç–∏–π
    internal var eventStreamCancellable: AnyCancellable?
    
    /// Debouncing –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —è—Ä–∫–æ—Å—Ç–∏
    internal var brightnessUpdateWorkItem: DispatchWorkItem?
    
    /// Debouncing –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–≤–µ—Ç–∞
    internal var colorUpdateWorkItem: DispatchWorkItem?
    
    // MARK: - Initialization
    
    /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç ViewModel —Å API –∫–ª–∏–µ–Ω—Ç–æ–º
    /// - Parameter apiClient: –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç Hue API
    init(apiClient: HueAPIClient) {
        self.apiClient = apiClient
        setupBindings()
        apiClient.setLightsViewModel(self)
    }
    
    // MARK: - Internal Methods
    
    /// –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ –ª–∞–º–ø
    internal func updateLightsDictionary() {
        // –û—á–∏—â–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –µ—Å–ª–∏ –º–∞—Å—Å–∏–≤ –ø—É—Å—Ç–æ–π
        guard !lights.isEmpty else {
            lightsDict.removeAll()
            return
        }
        
        // –ë–µ–∑–æ–ø–∞—Å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ª–æ–≤–∞—Ä—å
        var newDict: [String: Int] = [:]
        for (index, light) in lights.enumerated() {
            newDict[light.id] = index
        }
        lightsDict = newDict
    }
    
    /// –û–±–Ω–æ–≤–ª—è–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ª–∞–º–ø—ã
    internal func updateLocalLight(_ lightId: String, with state: LightState) {
        guard let index = lightsDict[lightId], 
              index >= 0,
              index < lights.count else { 
            print("‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω –∏–Ω–¥–µ–∫—Å –¥–ª—è –ª–∞–º–ø—ã \(lightId) –∏–ª–∏ –∏–Ω–¥–µ–∫—Å –≤–Ω–µ –≥—Ä–∞–Ω–∏—Ü")
            return 
        }
        
        // –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        var updatedLight = lights[index]
        
        if let on = state.on {
            updatedLight.on = on
        }
        
        if let dimming = state.dimming {
            updatedLight.dimming = dimming
        }
        
        if let color = state.color {
            updatedLight.color = color
        }
        
        if let colorTemp = state.color_temperature {
            updatedLight.color_temperature = colorTemp
        }
        
        if let effects = state.effects_v2 {
            updatedLight.effects_v2 = effects
        }
        
        // –ë–µ–∑–æ–ø–∞—Å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –º–∞—Å—Å–∏–≤
        lights[index] = updatedLight
    }
    
    /// –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø—Ä–∏–≤—è–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    internal func setupBindings() {
        apiClient.errorPublisher
            .receive(on: RunLoop.main)
            .sink { [weak self] error in
                if case HueAPIError.notAuthenticated = error {
                    print("üìù –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è - –∂–¥–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
                } else {
                    self?.error = error
                }
            }
            .store(in: &cancellables)
    }
    
    // MARK: - Computed Properties
    
    /// –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –ª–∞–º–ø—ã
    var filteredLights: [Light] {
        switch filter {
        case .all:
            return lights
        case .on:
            return lights.filter { $0.on.on }
        case .off:
            return lights.filter { !$0.on.on }
        case .color:
            return lights.filter { $0.color != nil }
        case .white:
            return lights.filter { $0.color_temperature != nil && $0.color == nil }
        }
    }
    
    /// –ì—Ä—É–ø–ø–∞ 0 - –≤—Å–µ –ª–∞–º–ø—ã –≤ —Å–∏—Å—Ç–µ–º–µ
    var allLightsGroup: HueGroup {
        HueGroup(
            id: "0",
            type: "grouped_light",
            group_type: "light_group",
            metadata: GroupMetadata(name: "–í—Å–µ –ª–∞–º–ø—ã")
        )
    }
    
    /// –õ–∞–º–ø—ã —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ –∫–æ–º–Ω–∞—Ç–∞–º
    var lightsByRoom: [String: [Light]] {
        [:]
    }
    
    /// –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    var statistics: LightStatistics {
        LightStatistics(
            total: lights.count,
            on: lights.filter { $0.on.on }.count,
            off: lights.filter { !$0.on.on }.count,
            colorLights: lights.filter { $0.color != nil }.count,
            dimmableLights: lights.filter { $0.dimming != nil }.count,
            unreachable: lights.filter { $0.mode == "streaming" }.count
        )
    }
    
    // MARK: - Memory Management
    
    deinit {
        print("‚ôªÔ∏è LightsViewModel –¥–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è")
        // –û—Ç–º–µ–Ω—è–µ–º –≤—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏
        cancellables.forEach { $0.cancel() }
        cancellables.removeAll()
        
        // –û—Ç–º–µ–Ω—è–µ–º —Ç–∞–π–º–µ—Ä
        refreshTimer?.invalidate()
        refreshTimer = nil
        
        // –û—Ç–º–µ–Ω—è–µ–º –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
        brightnessUpdateWorkItem?.cancel()
        colorUpdateWorkItem?.cancel()
        
        // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ event stream —É–∂–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –¥–æ –¥–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        // –û—á–∏—Å—Ç–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–π –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–∏ –ø–∞–º—è—Ç–∏
    }
}

/// –§–∏–ª—å—Ç—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ª–∞–º–ø
enum LightFilter: String, CaseIterable {
    case all = "–í—Å–µ"
    case on = "–í–∫–ª—é—á–µ–Ω–Ω—ã–µ"
    case off = "–í—ã–∫–ª—é—á–µ–Ω–Ω—ã–µ"
    case color = "–¶–≤–µ—Ç–Ω—ã–µ"
    case white = "–ë–µ–ª—ã–µ"
    
    var icon: String {
        switch self {
        case .all: return "lightbulb"
        case .on: return "lightbulb.fill"
        case .off: return "lightbulb.slash"
        case .color: return "paintpalette"
        case .white: return "sun.max"
        }
    }
}

/// –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ª–∞–º–ø–∞–º
struct LightStatistics {
    let total: Int
    let on: Int
    let off: Int
    let colorLights: Int
    let dimmableLights: Int
    let unreachable: Int
    
    var onPercentage: Double {
        total > 0 ? Double(on) / Double(total) * 100 : 0
    }
    
    var averageBrightness: Double {
        0
    }
}

/*
 –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–Ø –ö –§–ê–ô–õ–£ LightsViewModel.swift
 
 –û–ø–∏—Å–∞–Ω–∏–µ:
 –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å ViewModel –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –ª–∞–º–ø Philips Hue.
 –°–æ–¥–µ—Ä–∂–∏—Ç –±–∞–∑–æ–≤—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∏ computed properties.
 
 –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:
 - Published —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è UI binding
 - Internal —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API
 - –°–ª–æ–≤–∞—Ä—å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ –ª–∞–º–ø
 - –§–∏–ª—å—Ç—Ä—ã –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
 
 –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 let viewModel = LightsViewModel(apiClient: apiClient)
 viewModel.loadLights()
 
 –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:
 - HueAPIClient –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API
 - SwiftUI/Combine –¥–ª—è —Ä–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
 
 –°–≤—è–∑–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:
 - LightsViewModel+LightControl.swift - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –ª–∞–º–ø
 - LightsViewModel+SerialNumber.swift - –ø–æ–∏—Å–∫ –ø–æ —Å–µ—Ä–∏–π–Ω–æ–º—É –Ω–æ–º–µ—Ä—É
 - LightsViewModel+EventStream.swift - –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π
 - LightsViewModel+NetworkSearch.swift - —Å–µ—Ç–µ–≤–æ–π –ø–æ–∏—Å–∫
 */
