//
//  LightsViewModel+SerialNumber.swift
//  BulbsHUE
//
//  Created by Anton Reasin on 8/16/25.
//

import Foundation
import Combine

extension LightsViewModel {
    
    // MARK: - Serial Number Search (Simplified)
   
    /// –ü–æ–∏—Å–∫ –ª–∞–º–ø—ã –ø–æ —Å–µ—Ä–∏–π–Ω–æ–º—É –Ω–æ–º–µ—Ä—É - –Ω–æ–≤–∞—è –ø—Ä–æ—Å—Ç–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è
    func addLightBySerialNumber(_ serialNumber: String) {
        print("üîç –ü–æ–∏—Å–∫ –ª–∞–º–ø—ã –ø–æ —Å–µ—Ä–∏–π–Ω–æ–º—É –Ω–æ–º–µ—Ä—É: \(serialNumber)")
        
        guard isValidSerialNumber(serialNumber) else {
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å–µ—Ä–∏–π–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞")
            error = HueAPIError.unknown("–°–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å 6 —Å–∏–º–≤–æ–ª–æ–≤ (0-9, A-Z)")
            return
        }
        
        isLoading = true
        error = nil
        clearSerialNumberFoundLights()
        
        apiClient.addLightBySerialNumber(serialNumber)
            .receive(on: RunLoop.main)
            .sink(
                receiveCompletion: { [weak self] completion in
                    Task { @MainActor in
                        self?.isLoading = false
                        
                        if case .failure(let error) = completion {
                            print("‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ª–∞–º–ø—ã: \(error)")
                            self?.error = HueAPIError.unknown("–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ª–∞–º–ø—ã: \(error.localizedDescription)")
                            self?.serialNumberFoundLights = []
                        }
                    }
                },
                receiveValue: { [weak self] foundLights in
                    guard let self = self else { return }
                    
                    Task { @MainActor in
                        print("üîÑ –û–±–Ω–æ–≤–ª—è–µ–º UI —Å –Ω–∞–π–¥–µ–Ω–Ω—ã–º–∏ –ª–∞–º–ø–∞–º–∏: \(foundLights.count)")
                        
                        self.isLoading = false
                        
                        if !foundLights.isEmpty {
                            print("‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω—ã –ª–∞–º–ø—ã –¥–ª—è –≤—ã–±–æ—Ä–∞: \(foundLights.count)")
                            
                            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –í–°–ï –ª–∞–º–ø—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
                            self.serialNumberFoundLights = foundLights
                            
                            // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Å–ø–∏—Å–æ–∫ –µ—Å–ª–∏ –µ—Å—Ç—å –Ω–æ–≤—ã–µ –ª–∞–º–ø—ã
                            for light in foundLights {
                                if !self.lights.contains(where: { $0.id == light.id }) {
                                    self.lights.append(light)
                                    print("üìù –î–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è –ª–∞–º–ø–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–ø–∏—Å–æ–∫: \(light.metadata.name)")
                                }
                            }
                            
                            print("üì± –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –ª–∞–º–ø –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
                        } else {
                            print("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ª–∞–º–ø")
                            self.error = HueAPIError.unknown("–õ–∞–º–ø—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –º–æ—Å—Ç—É.")
                            self.serialNumberFoundLights = []
                        }
                    }
                }
            )
            .store(in: &cancellables)
    }
    
    // MARK: - Helper Methods
    
    /// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Å–µ—Ä–∏–π–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ (6 —Å–∏–º–≤–æ–ª–æ–≤ A-Z, 0-9)
    func isValidSerialNumber(_ serialNumber: String) -> Bool {
        let cleanSerial = serialNumber.uppercased()
            .replacingOccurrences(of: "-", with: "")
            .replacingOccurrences(of: " ", with: "")
        
        return cleanSerial.count == 6 && cleanSerial.allSatisfy { char in
            char.isLetter || char.isNumber
        }
    }
    
    /// –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–∞–π–¥–µ–Ω–Ω—É—é –ª–∞–º–ø—É –≤ —Å–ø–∏—Å–æ–∫
    func addSerialNumberFoundLight(_ light: Light) {
        serialNumberFoundLights.append(light)
    }
    
    /// –û—á–∏—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ª–∞–º–ø –ø–æ —Å–µ—Ä–∏–π–Ω–æ–º—É –Ω–æ–º–µ—Ä—É
    func clearSerialNumberFoundLights() {
        serialNumberFoundLights = []
    }
    
    /// –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–æ–∏—Å–∫ –ø–æ —Å–µ—Ä–∏–π–Ω–æ–º—É –Ω–æ–º–µ—Ä—É
    func forceStopSerialNumberSearch() {
        isLoading = false
        cancellables.removeAll()
    }
}