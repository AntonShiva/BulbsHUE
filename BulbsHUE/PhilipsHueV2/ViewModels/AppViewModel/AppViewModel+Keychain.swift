//
//  AppViewModel+Keychain.swift
//  BulbsHUE
//
//  Created by Anton Reasin on 8/15/25.
//

import Foundation
import Combine

// MARK: - Keychain Management

extension AppViewModel {
    
    /// –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ Keychain
    func loadSavedSettingsFromKeychain() {
        if let credentials = HueKeychainManager.shared.getLastBridgeCredentials() {
            applicationKey = credentials.applicationKey
            recreateAPIClient(with: credentials.bridgeIP)
            
            if let clientKey = credentials.clientKey {
                setupEntertainmentClient(clientKey: clientKey)
            }
            
            currentBridge = Bridge(
                id: credentials.bridgeId,
                internalipaddress: credentials.bridgeIP,
                port: 443
            )
            
            connectionStatus = .connected
            showSetup = false  // üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≥–ª–∞–≤–Ω–æ–º—É —ç–∫—Ä–∞–Ω—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            startEventStream()
        } else {
            showSetup = true
        }
    }
    
    /// –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏
    func saveCredentials() {
        guard let bridge = currentBridge,
              let appKey = applicationKey else { return }
        
        let clientKey = HueKeychainManager.shared.getClientKey(for: bridge.id)
        
        let credentials = HueKeychainManager.BridgeCredentials(
            bridgeId: bridge.id,
            bridgeIP: bridge.internalipaddress,
            applicationKey: appKey,
            clientKey: clientKey
        )
        
        _ = HueKeychainManager.shared.saveBridgeCredentials(credentials)
    }
    
    /// –û—Ç–∫–ª—é—á–∞–µ—Ç—Å—è –æ—Ç –º–æ—Å—Ç–∞ –∏ —É–¥–∞–ª—è–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    func disconnectAndClearData() {
        guard let bridge = currentBridge else { return }
        
        disconnect()
        HueKeychainManager.shared.deleteCredentials(for: bridge.id)
    }
}

/*
 –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–Ø –ö –§–ê–ô–õ–£ AppViewModel+Keychain.swift
 
 –û–ø–∏—Å–∞–Ω–∏–µ:
 –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ AppViewModel –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º Keychain.
 –£–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –∏ –∑–∞–≥—Ä—É–∑–∫–æ–π —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Hue Bridge.
 
 –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:
 - loadSavedSettingsFromKeychain() - –∑–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö credentials
 - saveCredentials() - —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
 - disconnectAndClearData() - –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
 
 –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 appViewModel.loadSavedSettingsFromKeychain()
 appViewModel.saveCredentials()
 appViewModel.disconnectAndClearData()
 
 –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:
 - Application key –∏ client key —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ Keychain
 - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
 - –ü–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏
 
 –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:
 - HueKeychainManager –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Keychain
 - BridgeCredentials —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
 
 –°–≤—è–∑–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:
 - AppViewModel.swift - –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å
 - HueKeychainManager.swift - –º–µ–Ω–µ–¥–∂–µ—Ä Keychain
 - AppViewModel+Connection.swift - –º–µ—Ç–æ–¥—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
 */
