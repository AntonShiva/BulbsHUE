//
//  OnboardingViewModel+Bridge.swift
//  BulbsHUE
//
//  Created by Anton Reasin on 8/16/25.
//

import SwiftUI

extension OnboardingViewModel {
    
    // MARK: - Bridge Management
    
    func selectBridge(_ bridge: Bridge) {
        print("üì° –í—ã–±—Ä–∞–Ω –º–æ—Å—Ç: \(bridge.id)")
        selectedBridge = bridge
        appViewModel.currentBridge = bridge
    }
    
    func startBridgeSearch() {
        print("üîç –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–∏—Å–∫ –º–æ—Å—Ç–æ–≤ –≤ —Å–µ—Ç–∏")
        isSearchingBridges = true
        discoveredBridges.removeAll()
        connectionError = nil
        
        appViewModel.searchForBridges()
        
        // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤–º–µ—Å—Ç–æ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–∞–π–º–∞—É—Ç–∞
        let startTime = Date()
        let maxSearchTime: TimeInterval = 30.0 // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –ø–æ–∏—Å–∫–∞
        
        func checkSearchProgress() {
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑ AppViewModel
            updateFromAppViewModel()
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
            if appViewModel.connectionStatus == .connected ||
               appViewModel.connectionStatus == .needsAuthentication {
                print("‚úÖ –ú–æ—Å—Ç —É–∂–µ –Ω–∞–π–¥–µ–Ω –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω")
                isSearchingBridges = false
                return
            }
            
            if appViewModel.connectionStatus == .discovered && !appViewModel.discoveredBridges.isEmpty {
                print("‚úÖ –ù–∞–π–¥–µ–Ω–æ –º–æ—Å—Ç–æ–≤: \(appViewModel.discoveredBridges.count)")
                isSearchingBridges = false
                updateFromAppViewModel()
                return
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—à–∏–±–∫–∏
            if let error = appViewModel.error as? HueAPIError,
               case .localNetworkPermissionDenied = error {
                print("üö´ –û—Ç–∫–∞–∑–∞–Ω–æ –≤ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–∏ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏")
                isSearchingBridges = false
                showLocalNetworkAlert = true
                return
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–π–º–∞—É—Ç
            if Date().timeIntervalSince(startTime) > maxSearchTime {
                print("‚è∞ –ü—Ä–µ–≤—ã—à–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –ø–æ–∏—Å–∫–∞")
                isSearchingBridges = false
                if appViewModel.discoveredBridges.isEmpty {
                    connectionError = "–ú–æ—Å—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ."
                } else {
                    updateFromAppViewModel()
                }
                return
            }
            
            // –ï—Å–ª–∏ –ø–æ–∏—Å–∫ –µ—â–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è - –ø–ª–∞–Ω–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
            if appViewModel.connectionStatus == .searching && isSearchingBridges {
                Task { @MainActor in
                    try await Task.sleep(nanoseconds: 500_000_000) // 0.5 —Å–µ–∫—É–Ω–¥—ã
                    checkSearchProgress()
                }
            } else {
                // –ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω –ø–æ –¥—Ä—É–≥–∏–º –ø—Ä–∏—á–∏–Ω–∞–º
                isSearchingBridges = false
                updateFromAppViewModel()
            }
        }
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—É—é –ø—Ä–æ–≤–µ—Ä–∫—É —á–µ—Ä–µ–∑ –∫–æ—Ä–æ—Ç–∫—É—é –∑–∞–¥–µ—Ä–∂–∫—É
        Task { @MainActor in
            try await Task.sleep(nanoseconds: 100_000_000) // 0.1 —Å–µ–∫—É–Ω–¥—ã
            checkSearchProgress()
        }
    }
}

/*
 –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–Ø –ö –§–ê–ô–õ–£ OnboardingViewModel+Bridge.swift
 
 –û–ø–∏—Å–∞–Ω–∏–µ:
 –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Hue Bridge - –ø–æ–∏—Å–∫ –∏ –≤—ã–±–æ—Ä.
 
 –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã:
 - selectBridge() - –≤—ã–±–æ—Ä –º–æ—Å—Ç–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
 - startBridgeSearch() - –∑–∞–ø—É—Å–∫ –ø–æ–∏—Å–∫–∞ –º–æ—Å—Ç–æ–≤ –≤ —Å–µ—Ç–∏
 
 –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 viewModel.startBridgeSearch()
 viewModel.selectBridge(bridge)
 
 –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:
 - AppViewModel –¥–ª—è API –ø–æ–∏—Å–∫–∞
 - Bridge –º–æ–¥–µ–ª—å –¥–∞–Ω–Ω—ã—Ö
 */
