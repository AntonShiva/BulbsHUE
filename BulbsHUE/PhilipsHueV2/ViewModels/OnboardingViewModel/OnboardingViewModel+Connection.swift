//
//  OnboardingViewModel+Connection.swift
//  BulbsHUE
//
//  Created by Anton Reasin on 8/16/25.
//

import SwiftUI
import Combine

extension OnboardingViewModel {
    
    // MARK: - Connection Management
    
    func startBridgeConnection() {
        guard let bridge = selectedBridge else {
            print("‚ùå –ù–µ –≤—ã–±—Ä–∞–Ω –º–æ—Å—Ç –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
            return
        }
        
        guard !isConnecting else {
            print("‚ö†Ô∏è –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ")
            return
        }
        
        print("üîó –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –º–æ—Å—Ç—É: \(bridge.id) at \(bridge.internalipaddress)")
        isConnecting = true
        connectionAttempts = 0
        linkButtonPressed = false
        connectionError = nil
        
        appViewModel.connectToBridge(bridge)
        showLinkButtonAlert = true
        startLinkButtonPolling()
    }
    
    func startLinkButtonPolling() {
        print("‚è± –ó–∞–ø—É—Å–∫–∞–µ–º –æ–ø—Ä–æ—Å Link Button –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã")
        
        linkButtonTimer?.invalidate()
        linkButtonTimer = Timer.scheduledTimer(withTimeInterval: 2.0, repeats: true) { [weak self] _ in
            self?.attemptCreateUser()
        }
        attemptCreateUser()
    }
    
    func attemptCreateUser() {
        connectionAttempts += 1
        
        print("üîê –ü–æ–ø—ã—Ç–∫–∞ #\(connectionAttempts) —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
        
        if connectionAttempts >= maxConnectionAttempts {
            print("‚è∞ –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –ø–æ–ø—ã—Ç–æ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
            handleConnectionTimeout()
            return
        }
        
        linkButtonCountdown = max(0, 60 - (connectionAttempts * 2))
        
        #if canImport(UIKit)
        let deviceName = UIDevice.current.name
        #else
        let deviceName = Host.current().localizedName ?? "Mac"
        #endif
        
        appViewModel.createUserWithRetry(appName: "BulbsHUE") { [weak self] success in
            guard let self = self else { return }
            
            if success {
                print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω! Link Button –±—ã–ª –Ω–∞–∂–∞—Ç!")
                self.linkButtonPressed = true
                self.handleSuccessfulConnection()
            } else {
                if let error = self.appViewModel.error as? HueAPIError {
                    switch error {
                    case .linkButtonNotPressed:
                        print("‚è≥ Link Button –µ—â–µ –Ω–µ –Ω–∞–∂–∞—Ç, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–∂–∏–¥–∞–Ω–∏–µ...")
                    case .localNetworkPermissionDenied:
                        print("üö´ –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏!")
                        self.handleNetworkPermissionError()
                    default:
                        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: \(error)")
                    }
                }
            }
        }
    }
    
    func handleConnectionTimeout() {
        print("‚è∞ –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ")
        cancelLinkButton()
        connectionError = "–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –Ω–∞–∂–∞–ª–∏ –∫—Ä—É–≥–ª—É—é –∫–Ω–æ–ø–∫—É Link –Ω–∞ Hue Bridge –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        showLinkButtonAlert = false
    }
    
    func handleNetworkPermissionError() {
        cancelLinkButton()
        showLocalNetworkAlert = true
    }
    
    func cancelLinkButton() {
        print("üö´ –û—Ç–º–µ–Ω–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
        linkButtonTimer?.invalidate()
        linkButtonTimer = nil
        showLinkButtonAlert = false
        isConnecting = false
        linkButtonPressed = false
        connectionAttempts = 0
        linkButtonCountdown = 30
        connectionError = nil
    }
}

/*
 –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–Ø –ö –§–ê–ô–õ–£ OnboardingViewModel+Connection.swift
 
 –û–ø–∏—Å–∞–Ω–∏–µ:
 –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Hue Bridge.
 
 –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã:
 - startBridgeConnection() - –∑–∞–ø—É—Å–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
 - startLinkButtonPolling() - –æ–ø—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è Link Button
 - attemptCreateUser() - –ø–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 - cancelLinkButton() - –æ—Ç–º–µ–Ω–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞
 
 –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 viewModel.startBridgeConnection()
 
 –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:
 - AppViewModel –¥–ª—è API –≤—ã–∑–æ–≤–æ–≤
 - Timer –¥–ª—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–≥–æ –æ–ø—Ä–æ—Å–∞
 */
