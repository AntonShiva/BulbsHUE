//
//  HueBridgeDiscoveryTest.swift
//  PhilipsHueV2
//
//  Created by Anton Reasin on 31.07.2025.
//

import Foundation

/// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã HueBridgeDiscovery
@available(iOS 12.0, *)
class HueBridgeDiscoveryTest {
    
    /// –ó–∞–ø—É—Å–∫–∞–µ—Ç —Ç–µ—Å—Ç discovery –±–µ–∑ –∫—Ä–∞—à–∞
    static func runTest() {
        print("üß™ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç HueBridgeDiscovery...")
        
        let discovery = HueBridgeDiscovery()
        
        discovery.discoverBridges { bridges in
            print("üß™ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω. –ù–∞–π–¥–µ–Ω–æ –º–æ—Å—Ç–æ–≤: \(bridges.count)")
            for bridge in bridges {
                print("   - \(bridge.name) (\(bridge.id)) at \(bridge.internalipaddress)")
            }
        }
        
        print("üß™ –¢–µ—Å—Ç –∑–∞–ø—É—â–µ–Ω, –æ–∂–∏–¥–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã...")
    }
    
    /// –ó–∞–ø—É—Å–∫–∞–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ race conditions
    static func runMultipleTests() {
        print("üß™ –ó–∞–ø—É—Å–∫–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã...")
        
        for i in 1...3 {
            DispatchQueue.global().asyncAfter(deadline: .now() + Double(i)) {
                print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ #\(i)")
                let discovery = HueBridgeDiscovery()
                discovery.discoverBridges { bridges in
                    print("üß™ –¢–µ—Å—Ç #\(i) –∑–∞–≤–µ—Ä—à–µ–Ω: \(bridges.count) –º–æ—Å—Ç–æ–≤")
                }
            }
        }
    }
}