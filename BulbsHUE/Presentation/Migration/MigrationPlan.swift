//
//  MigrationPlan.swift
//  BulbsHUE
//
//  Created by Anton Reasin on 15.08.2025.
//

import Foundation
import Combine

/**
 # –ü–æ—à–∞–≥–æ–≤—ã–π –ø–ª–∞–Ω –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏
 
 ## –ü—Ä–∏–Ω—Ü–∏–ø "Strangler Fig Pattern"
 –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–µ –∑–∞–º–µ—â–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–¥–∞ –Ω–æ–≤—ã–º –±–µ–∑ –Ω–∞—Ä—É—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏.
 
 ## –≠—Ç–∞–ø—ã –º–∏–≥—Ä–∞—Ü–∏–∏:
 
 ### üü° –≠–¢–ê–ü 1: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ (–í–´–ü–û–õ–ù–ï–ù–û)
 - [x] Clean Architecture —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
 - [x] Redux Store –∏ –±–∞–∑–æ–≤—ã–µ —ç–∫—à–µ–Ω—ã
 - [x] –£–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è NavigationAction
 
 ### üîµ –≠–¢–ê–ü 2: –ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ (–¢–ï–ö–£–©–ò–ô)
 - [x] MigrationAdapter –¥–ª—è –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞
 - [ ] Feature flags –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–µ–π
 - [ ] –ö–æ–Ω–≤–µ—Ä—Ç–æ—Ä—ã –º–µ–∂–¥—É —Å—Ç–∞—Ä—ã–º–∏ –∏ –Ω–æ–≤—ã–º–∏ –º–æ–¥–µ–ª—è–º–∏
 - [ ] –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è MigrationAdapter –≤ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
 
 ### üü¢ –≠–¢–ê–ü 3: Bridge Service (1-2 –Ω–µ–¥–µ–ª–∏)
 –°–∞–º–∞—è –∫—Ä–∏—Ç–∏—á–Ω–∞—è, –Ω–æ –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —á–∞—Å—Ç—å
 
 #### –ù–µ–¥–µ–ª—è 1: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ Bridge –º–∏–≥—Ä–∞—Ü–∏–∏
 - [ ] –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å BridgeRepository
 - [ ] –°–æ–∑–¥–∞—Ç—å UseCases –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –º–æ—Å—Ç—É
 - [ ] –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—É—é —Ä–∞–±–æ—Ç—É —Å—Ç–∞—Ä–æ–π/–Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
 
 #### –ù–µ–¥–µ–ª—è 2: –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ Bridge
 - [ ] –í–∫–ª—é—á–∏—Ç—å MigrationFeatureFlags.useNewBridgeArchitecture = true
 - [ ] –£–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç
 - [ ] –£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–π Bridge –∫–æ–¥
 
 ### üü† –≠–¢–ê–ü 4: Light Management (2 –Ω–µ–¥–µ–ª–∏)
 –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∞–º–ø–∞–º–∏ - –æ—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
 
 #### –ù–µ–¥–µ–ª—è 3: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ Light –º–∏–≥—Ä–∞—Ü–∏–∏
 - [ ] –î–æ—Ä–∞–±–æ—Ç–∞—Ç—å LightRepository
 - [ ] –°–æ–∑–¥–∞—Ç—å –≤—Å–µ Light UseCases
 - [ ] –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–æ–Ω–≤–µ—Ä—Ç–æ—Ä—ã Light <-> LightEntity
 
 #### –ù–µ–¥–µ–ª—è 4: –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ Lights
 - [ ] –í–∫–ª—é—á–∏—Ç—å MigrationFeatureFlags.useReduxForLights = true
 - [ ] –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
 - [ ] –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
 
 ### üü£ –≠–¢–ê–ü 5: Scenes & Groups (1 –Ω–µ–¥–µ–ª—è)
 #### –ù–µ–¥–µ–ª—è 5: –°—Ü–µ–Ω—ã –∏ –≥—Ä—É–ø–ø—ã
 - [ ] –ú–∏–≥—Ä–∏—Ä–æ–≤–∞—Ç—å ScenesViewModel ‚Üí Redux
 - [ ] –ú–∏–≥—Ä–∏—Ä–æ–≤–∞—Ç—å GroupsViewModel ‚Üí Redux
 - [ ] –û–±–Ω–æ–≤–∏—Ç—å UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
 
 ### üî¥ –≠–¢–ê–ü 6: –û—Å—Ç–∞–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏ (1 –Ω–µ–¥–µ–ª—è)
 #### –ù–µ–¥–µ–ª—è 6: Sensors, Rules, etc.
 - [ ] –ú–∏–≥—Ä–∏—Ä–æ–≤–∞—Ç—å RulesViewModel ‚Üí Redux
 - [ ] –ú–∏–≥—Ä–∏—Ä–æ–≤–∞—Ç—å SensorsViewModel ‚Üí Redux
 - [ ] –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
 
 ### ‚ö™ –≠–¢–ê–ü 7: Cleanup (1 –Ω–µ–¥–µ–ª—è)
 #### –ù–µ–¥–µ–ª—è 7: –û—á–∏—Å—Ç–∫–∞ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
 - [ ] –£–¥–∞–ª–∏—Ç—å MigrationAdapter
 - [ ] –£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–µ ViewModels
 - [ ] –£–±—Ä–∞—Ç—å feature flags
 - [ ] –§–∏–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
 */

/// –î–µ—Ç–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç—Ç–∞–ø–∞
enum MigrationStep: CaseIterable, Identifiable {
    case preparation
    case compatibility
    case bridgeService
    case lightManagement
    case scenesAndGroups
    case remainingModules
    case cleanup
    
    var id: String { return self.title }
    
    var title: String {
        switch self {
        case .preparation: return "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã"
        case .compatibility: return "–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å—Ç–∞—Ä–æ–π/–Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã"
        case .bridgeService: return "–ú–∏–≥—Ä–∞—Ü–∏—è Bridge Service"
        case .lightManagement: return "–ú–∏–≥—Ä–∞—Ü–∏—è Light Management"
        case .scenesAndGroups: return "–ú–∏–≥—Ä–∞—Ü–∏—è Scenes & Groups"
        case .remainingModules: return "–ú–∏–≥—Ä–∞—Ü–∏—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –º–æ–¥—É–ª–µ–π"
        case .cleanup: return "–û—á–∏—Å—Ç–∫–∞ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è"
        }
    }
    
    var description: String {
        switch self {
        case .preparation:
            return """
            ‚úÖ –í–´–ü–û–õ–ù–ï–ù–û
            - Clean Architecture —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞
            - Redux Store –Ω–∞—Å—Ç—Ä–æ–µ–Ω
            - NavigationAction —É–¥–∞–ª–µ–Ω –∏–∑ Redux
            """
            
        case .compatibility:
            return """
            üîµ –¢–ï–ö–£–©–ò–ô –≠–¢–ê–ü
            - –°–æ–∑–¥–∞—Ç—å MigrationAdapter –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞
            - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å feature flags
            - –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–æ–Ω–≤–µ—Ä—Ç–æ—Ä—ã –º–æ–¥–µ–ª–µ–π
            - –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –≤ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
            
            –¶–µ–ª—å: –û–±–µ—Å–ø–µ—á–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å—Ç–∞—Ä–æ–π –∏ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
            """
            
        case .bridgeService:
            return """
            üü¢ –°–õ–ï–î–£–Æ–©–ò–ô –≠–¢–ê–ü (1-2 –Ω–µ–¥–µ–ª–∏)
            - –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ–ª–Ω—ã–π BridgeRepository
            - –°–æ–∑–¥–∞—Ç—å UseCases –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–æ—Å—Ç–æ–º
            - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É
            - –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å –Ω–∞ –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É
            
            –ö—Ä–∏—Ç–∏—á–Ω–æ: Bridge - –æ—Å–Ω–æ–≤–∞ –≤—Å–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            """
            
        case .lightManagement:
            return """
            üü† –≠–¢–ê–ü 4 (2 –Ω–µ–¥–µ–ª–∏)
            - –î–æ—Ä–∞–±–æ—Ç–∞—Ç—å LightRepository –∏ UseCases
            - –ú–∏–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∞–º–ø–∞–º–∏ –Ω–∞ Redux
            - –û–±–Ω–æ–≤–∏—Ç—å –≤—Å–µ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–æ–≤—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
            - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
            
            –í–∞–∂–Ω–æ: –ù–µ –ø–æ—Ç–µ—Ä—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–∞–º–ø
            """
            
        case .scenesAndGroups:
            return """
            üü£ –≠–¢–ê–ü 5 (1 –Ω–µ–¥–µ–ª—è)
            - –ú–∏–≥—Ä–∏—Ä–æ–≤–∞—Ç—å ScenesViewModel –Ω–∞ Redux
            - –ú–∏–≥—Ä–∏—Ä–æ–≤–∞—Ç—å GroupsViewModel –Ω–∞ Redux
            - –û–±–Ω–æ–≤–∏—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
            
            –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—Å—Ç–æ–π —ç—Ç–∞–ø, —Ç–∞–∫ –∫–∞–∫ –æ—Å–Ω–æ–≤–∞ —É–∂–µ –≥–æ—Ç–æ–≤–∞
            """
            
        case .remainingModules:
            return """
            üî¥ –≠–¢–ê–ü 6 (1 –Ω–µ–¥–µ–ª—è)
            - –ú–∏–≥—Ä–∏—Ä–æ–≤–∞—Ç—å RulesViewModel
            - –ú–∏–≥—Ä–∏—Ä–æ–≤–∞—Ç—å SensorsViewModel
            - –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –º–æ–¥—É–ª–∏ –Ω–∞ –Ω–æ–≤—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É
            
            –ó–∞–≤–µ—Ä—à–∞—é—â–∏–π —ç—Ç–∞–ø —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏
            """
            
        case .cleanup:
            return """
            ‚ö™ –≠–¢–ê–ü 7 (1 –Ω–µ–¥–µ–ª—è)
            - –£–¥–∞–ª–∏—Ç—å MigrationAdapter
            - –£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–µ ViewModels
            - –£–±—Ä–∞—Ç—å feature flags
            - –§–∏–Ω–∞–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∫–æ–¥–∞
            - –ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
            
            –†–µ–∑—É–ª—å—Ç–∞—Ç: –ß–∏—Å—Ç–∞—è Clean Architecture + Redux —Å–∏—Å—Ç–µ–º–∞
            """
        }
    }
    
    var risks: [String] {
        switch self {
        case .preparation:
            return ["–ö–æ–Ω—Ñ–ª–∏–∫—Ç—ã –∏–º–µ–Ω–æ–≤–∞–Ω–∏—è", "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–ø–æ–∫"]
            
        case .compatibility:
            return [
                "–î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è",
                "–†–∞—Å—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å—Ç–∞—Ä–æ–π –∏ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã",
                "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π"
            ]
            
        case .bridgeService:
            return [
                "–ü–æ—Ç–µ—Ä—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –º–æ—Å—Ç—É",
                "–ü—Ä–æ–±–ª–µ–º—ã —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π",
                "–ö–æ–Ω—Ñ–ª–∏–∫—Ç—ã –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"
            ]
            
        case .lightManagement:
            return [
                "–ü–æ—Ç–µ—Ä—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ª–∞–º–ø",
                "–ü—Ä–æ–±–ª–µ–º—ã —Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π —Å–æ—Å—Ç–æ—è–Ω–∏—è",
                "–ü–∞–¥–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ UI"
            ]
            
        case .scenesAndGroups:
            return [
                "–ü—Ä–æ–±–ª–µ–º—ã —Å –∞–∫—Ç–∏–≤–∞—Ü–∏–µ–π —Å—Ü–µ–Ω",
                "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ª–∞–º–ø"
            ]
            
        case .remainingModules:
            return [
                "–ü–æ–ª–æ–º–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ (Rules)",
                "–ü—Ä–æ–±–ª–µ–º—ã —Å –¥–∞—Ç—á–∏–∫–∞–º–∏"
            ]
            
        case .cleanup:
            return [
                "–û—Å—Ç–∞—Ç–æ—á–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å—Ç–∞—Ä—ã–π –∫–æ–¥",
                "–†–µ–≥—Ä–µ—Å—Å–∏–∏ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è MigrationAdapter"
            ]
        }
    }
    
    var successCriteria: [String] {
        switch self {
        case .preparation:
            return [
                "–ü—Ä–æ–µ–∫—Ç —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫",
                "–í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—Ö–æ–¥—è—Ç",
                "Redux Store –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
            ]
            
        case .compatibility:
            return [
                "MigrationAdapter –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –º–µ–∂–¥—É —Å–∏—Å—Ç–µ–º–∞–º–∏",
                "Feature flags —Ä–∞–±–æ—Ç–∞—é—Ç",
                "–ö–æ–Ω–≤–µ—Ä—Ç–æ—Ä—ã –º–æ–¥–µ–ª–µ–π –Ω–µ —Ç–µ—Ä—è—é—Ç –¥–∞–Ω–Ω—ã–µ"
            ]
            
        case .bridgeService:
            return [
                "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –º–æ—Å—Ç—É —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É",
                "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è",
                "–°—Ç–∞—Ä–∞—è —Å–∏—Å—Ç–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç–∫–ª—é—á–µ–Ω–∞ –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏"
            ]
            
        case .lightManagement:
            return [
                "–í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –ª–∞–º–ø–∞–º–∏ —Ä–∞–±–æ—Ç–∞—é—Ç —á–µ—Ä–µ–∑ Redux",
                "UI –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ",
                "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è"
            ]
            
        case .scenesAndGroups:
            return [
                "–°—Ü–µ–Ω—ã –∞–∫—Ç–∏–≤–∏—Ä—É—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ",
                "–ì—Ä—É–ø–ø—ã —Ä–∞–±–æ—Ç–∞—é—Ç",
                "UI –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ"
            ]
            
        case .remainingModules:
            return [
                "–í—Å–µ ViewModels –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã",
                "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç",
                "–î–∞—Ç—á–∏–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
            ]
            
        case .cleanup:
            return [
                "–ü—Ä–æ–µ–∫—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–π –∫–æ–¥",
                "–ù–µ—Ç –º–µ—Ä—Ç–≤–æ–≥–æ –∫–æ–¥–∞",
                "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω–µ —É—Ö—É–¥—à–∏–ª–∞—Å—å",
                "–í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—Ö–æ–¥—è—Ç"
            ]
        }
    }
}

/// –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–∏
class MigrationStatus: ObservableObject {
    @Published var currentStep: MigrationStep = .compatibility
    @Published var completedSteps: Set<MigrationStep> = [.preparation]
    
    func markCompleted(_ step: MigrationStep) {
        completedSteps.insert(step)
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É
        if let nextIndex = MigrationStep.allCases.firstIndex(of: step).map({ $0 + 1 }),
           nextIndex < MigrationStep.allCases.count {
            currentStep = MigrationStep.allCases[nextIndex]
        }
    }
    
    func isCompleted(_ step: MigrationStep) -> Bool {
        completedSteps.contains(step)
    }
    
    var progress: Double {
        return Double(completedSteps.count) / Double(MigrationStep.allCases.count)
    }
}
