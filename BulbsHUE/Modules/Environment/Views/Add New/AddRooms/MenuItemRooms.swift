//
//  MenuItemRooms.swift
//  BulbsHUE
//
//  Created by Anton Reasin on 8/22/25.
//

import SwiftUI
import Combine

/// –ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è –∫–æ–º–Ω–∞—Ç—ã (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è, –∏—Å–ø–æ–ª—å–∑—É—é—â–∞—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã)
/// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç UniversalMenuView –¥–ª—è –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Å –º–µ–Ω—é –ª–∞–º–ø
struct MenuItemRooms: View {
    let roomId: String
    let roomName: String
    /// –¢–∏–ø –∫–æ–º–Ω–∞—Ç—ã (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –ø–æ–¥—Ç–∏–ø)
    let roomType: String
    /// –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö –ª–∞–º–ø –≤ –∫–æ–º–Ω–∞—Ç–µ
    let bulbCount: Int
    /// –ë–∞–∑–æ–≤—ã–π —Ü–≤–µ—Ç –¥–ª—è —Ñ–æ–Ω–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    let baseColor: Color
    
    @Environment(NavigationManager.self) private var nav
    
    /// –ù–∞–±–æ—Ä cancellables –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–æ–∫ Combine
    @State private var cancellables = Set<AnyCancellable>()
    
    /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω—é –∫–æ–º–Ω–∞—Ç—ã
    /// - Parameters:
    ///   - roomId: ID –∫–æ–º–Ω–∞—Ç—ã
    ///   - roomName: –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã
    ///   - roomType: –¢–∏–ø –∫–æ–º–Ω–∞—Ç—ã
    ///   - bulbCount: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∞–º–ø –≤ –∫–æ–º–Ω–∞—Ç–µ
    ///   - baseColor: –ë–∞–∑–æ–≤—ã–π —Ü–≤–µ—Ç –¥–ª—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    init(roomId: String,
         roomName: String, 
         roomType: String, 
         bulbCount: Int, 
         baseColor: Color = .cyan) {
        self.roomId = roomId
        self.roomName = roomName
        self.roomType = roomType
        self.bulbCount = bulbCount
        self.baseColor = baseColor
    }
    
    var body: some View {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ nav.selectedRoomForMenu –¥–ª—è —Ä–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        let currentRoom = nav.selectedRoomForMenu
        let displayRoomName = currentRoom?.subtypeName ?? roomName // ‚úÖ –ü–æ–¥—Ç–∏–ø –∫–∞–∫ –Ω–∞–∑–≤–∞–Ω–∏–µ (HOME)
        let displayRoomType = currentRoom?.type.parentEnvironmentType.displayName.uppercased() ?? roomType // ‚úÖ –¢–∏–ø –∫–∞–∫ –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫ (LEVELS)
        let displayBulbCount = currentRoom?.lightCount ?? bulbCount
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ –º–µ–Ω—é —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π –¥–ª—è –∫–æ–º–Ω–∞—Ç—ã
        UniversalMenuView(
            itemData: .room(
                title: displayRoomName, // HOME (–ø–æ–¥—Ç–∏–ø)
                subtitle: displayRoomType, // LEVELS (—Ç–∏–ø)
                bulbCount: displayBulbCount,
                baseColor: baseColor,
                roomId: roomId
            ),
            menuConfig: .forRoom(
                onChangeType: {
                    print("üè† Change room type pressed")
                    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–º–µ–Ω—É —Ç–∏–ø–∞ –∫–æ–º–Ω–∞—Ç—ã
                },
                onTypeChanged: { typeName, iconName in
                    print("‚úÖ Room type changed to: \(typeName), icon: \(iconName)")
                    // TODO: –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–æ–≤—ã–π —Ç–∏–ø –∫–æ–º–Ω–∞—Ç—ã –≤ –º–æ–¥–µ–ª—å –¥–∞–Ω–Ω—ã—Ö
                    // –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∫–æ–º–Ω–∞—Ç—ã —Å –Ω–æ–≤—ã–º —Ç–∏–ø–æ–º
                },
                onRename: { newName in
                    print("‚úèÔ∏è Rename room to: \(newName)")
                    // –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –≤ UniversalMenuView —á–µ—Ä–µ–∑ Use Cases
                },
                onReorganize: {
                    print("üìã Reorganize room pressed")
                    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ä–µ–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é –∫–æ–º–Ω–∞—Ç—ã (–ø–µ—Ä–µ–Ω–æ—Å –ª–∞–º–ø)
                },
                onDelete: {
                    print("üóëÔ∏è Delete room pressed")
                    
                    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–æ–º–Ω–∞—Ç—É –∏–∑ NavigationManager
                    guard let currentRoom = self.nav.selectedRoomForMenu else {
                        print("‚ùå –û—à–∏–±–∫–∞: –ù–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–æ–º–Ω–∞—Ç—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
                        return
                    }
                    
                    // –ò—Å–ø–æ–ª—å–∑—É–µ–º DeleteRoomUseCase –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–º–Ω–∞—Ç—ã
                    let deleteRoomUseCase = DIContainer.shared.deleteRoomUseCase
                    
                    // –í—ã–ø–æ–ª–Ω—è–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Combine
                    deleteRoomUseCase.execute(currentRoom.id)
                        .receive(on: DispatchQueue.main)
                        .sink(
                            receiveCompletion: { completion in
                                switch completion {
                                case .finished:
                                    print("‚úÖ –ö–æ–º–Ω–∞—Ç–∞ '\(currentRoom.subtypeName)' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞")
                                    
                                    // –û—á–∏—â–∞–µ–º selectedRoomForMenu
                                    self.nav.selectedRoomForMenu = nil
                                    
                                    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é
                                    self.nav.hideMenuView()
                                    
                                case .failure(let error):
                                    print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–æ–º–Ω–∞—Ç—ã: \(error.localizedDescription)")
                                }
                            },
                            receiveValue: { _ in
                                // –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ
                            }
                        )
                        .store(in: &cancellables)
                }
            )
        )
    }
}

#Preview("Room with 5 bulbs") {
    MenuItemRooms(
        roomId: "preview_room_1",
        roomName: "LIVING ROOM", 
        roomType: "RECREATION", 
        bulbCount: 5, 
        baseColor: .cyan
    )
    .environment(NavigationManager.shared)
}

#Preview("Room with 2 bulbs") {
    MenuItemRooms(
        roomId: "preview_room_2",
        roomName: "BEDROOM", 
        roomType: "PERSONAL", 
        bulbCount: 2, 
        baseColor: .orange
    )
    .environment(NavigationManager.shared)
}

#Preview("Empty room") {
    MenuItemRooms(
        roomId: "preview_room_3",
        roomName: "KITCHEN", 
        roomType: "PRACTICAL", 
        bulbCount: 0, 
        baseColor: .green
    )
    .environment(NavigationManager.shared)
}
