//
//  RoomColorStateService.swift
//  BulbsHUE
//
//  Created by Anton Reasin on 2.09.2025.
//

import SwiftUI
import Combine

// MARK: - Room Color State Management

/// –°–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —Ü–≤–µ—Ç–∞ –∫–æ–º–Ω–∞—Ç
/// –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–æ–º–Ω–∞—Ç
/// –°–ª–µ–¥—É–µ—Ç –ø—Ä–∏–Ω—Ü–∏–ø–∞–º SOLID - Single Responsibility
@MainActor
final class RoomColorStateService: ObservableObject {
    
    // MARK: - Private Properties
    
    /// –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤ –∫–æ–º–Ω–∞—Ç
    /// –ö–ª—é—á - ID –∫–æ–º–Ω–∞—Ç—ã, –∑–Ω–∞—á–µ–Ω–∏–µ - —Ü–≤–µ—Ç
    @Published private var roomColors: [String: Color] = [:]
    
    // MARK: - Singleton
    
    static let shared = RoomColorStateService()
    
    private init() {
        // –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –¥–ª—è Singleton
    }
    
    // MARK: - Public Methods
    
    /// –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–≤–µ—Ç –¥–ª—è –∫–æ–º–Ω–∞—Ç—ã
    /// - Parameters:
    ///   - roomId: ID –∫–æ–º–Ω–∞—Ç—ã
    ///   - color: –¶–≤–µ—Ç –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    func setRoomColor(_ roomId: String, color: Color) {
        roomColors[roomId] = color
        print("üé® RoomColorStateService: –°–æ—Ö—Ä–∞–Ω–µ–Ω —Ü–≤–µ—Ç –¥–ª—è –∫–æ–º–Ω–∞—Ç—ã \(roomId)")
    }
    
    /// –ü–æ–ª—É—á–∏—Ç—å —Ü–≤–µ—Ç –∫–æ–º–Ω–∞—Ç—ã
    /// - Parameter roomId: ID –∫–æ–º–Ω–∞—Ç—ã
    /// - Returns: –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Ü–≤–µ—Ç –∏–ª–∏ nil
    func getRoomColor(_ roomId: String) -> Color? {
        return roomColors[roomId]
    }
    
    /// –ü–æ–ª—É—á–∏—Ç—å baseColor –¥–ª—è –∫–æ–º–Ω–∞—Ç—ã (–¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ RoomControl)
    /// - Parameter room: –ö–æ–º–Ω–∞—Ç–∞
    /// - Returns: –¶–≤–µ—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ RoomControl
    func getBaseColor(for room: RoomEntity) -> Color {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Ü–≤–µ—Ç
        if let customColor = roomColors[room.id] {
            return customColor
        }
        
        // –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Ü–≤–µ—Ç–µ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π —Ç–µ–ø–ª—ã–π —Ü–≤–µ—Ç
        return Color(hue: 0.13, saturation: 0.25, brightness: 1.0)
    }
    
    /// –û—á–∏—Å—Ç–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∫–æ–º–Ω–∞—Ç—ã
    /// - Parameter roomId: ID –∫–æ–º–Ω–∞—Ç—ã
    func clearRoomState(_ roomId: String) {
        roomColors.removeValue(forKey: roomId)
    }
    
    /// –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    func clearAllStates() {
        roomColors.removeAll()
    }
}
