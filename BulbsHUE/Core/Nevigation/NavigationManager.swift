//
//  NavigationManager.swift
//  BulbsHUE
//
//  Created by Anton Reasin on 26.07.2025.
//

import SwiftUI
import Combine


// MARK: - Navigation Route
// –í–°–ï –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —ç–∫—Ä–∞–Ω–æ–≤
enum Router: Equatable {
    // –û—Å–Ω–æ–≤–Ω—ã–µ —ç–∫—Ä–∞–Ω—ã (–¥–ª—è TabBar)
    case environment
    case schedule
    case music
    
    // –≠–∫—Ä–∞–Ω—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ª–∞–º–ø–æ—á–µ–∫
    case addNewBulb               // –≠–∫—Ä–∞–Ω –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –ª–∞–º–ø–æ—á–∫–∏
    case searchResults            // –ü–æ–∏—Å–∫ –ª–∞–º–ø–æ—á–µ–∫ –≤ —Å–µ—Ç–∏ + —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    case selectCategories         // –í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –ª–∞–º–ø–æ—á–∫–∏
}

class NavigationManager: ObservableObject {
    @Published var currentRoute: Router = .environment
    
    // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –≤ AddNewBulb
    @Published var isSearching: Bool = false
    @Published var showSelectCategories: Bool = false
    /// –§–ª–∞–≥ –ø–æ–∫–∞–∑–∞ TabBar
    @Published var isTabBarVisible: Bool = true
    
    // –í—ã–±—Ä–∞–Ω–Ω–∞—è –ª–∞–º–ø–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    @Published var selectedLight: Light? = nil
    
    // –¢–∏–ø –ø–æ–∏—Å–∫–∞ –ª–∞–º–ø
    @Published var searchType: SearchType = .network
    
    enum SearchType {
        case network        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ –≤ —Å–µ—Ç–∏
        case serialNumber   // –ü–æ–∏—Å–∫ –ø–æ —Å–µ—Ä–∏–π–Ω–æ–º—É –Ω–æ–º–µ—Ä—É
    }
    
    /// –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –Ω–∞ –≥–ª–∞–≤–Ω–æ–º —ç–∫—Ä–∞–Ω–µ –≤–∫–ª–∞–¥–∫–∏
   func togleTabBarVisible() {
      isTabBarVisible = currentRoute == .environment || currentRoute == .schedule || currentRoute == .music
       }
    
    static let shared = NavigationManager()
    private init() {}
    
    // MARK: - –û—Å–Ω–æ–≤–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É —ç–∫—Ä–∞–Ω–∞–º–∏
    func go(_ route: Router) {
        withAnimation(.easeInOut(duration: 0.15)) {
            currentRoute = route
            
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–∏—Å–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –º–µ–∂–¥—É –æ—Å–Ω–æ–≤–Ω—ã–º–∏ —ç–∫—Ä–∞–Ω–∞–º–∏
            if route != .addNewBulb {
                isSearching = false
                showSelectCategories = false
                selectedLight = nil
            }
        }
    }
    
    // MARK: - –ú–µ—Ç–æ–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ AddNewBulb
    func startSearch() {
        withAnimation(.easeInOut(duration: 0.15)) {
            isSearching = true
            showSelectCategories = false
            searchType = .network
        }
    }
    
 
    /// –ó–∞–ø—É—Å–∫ –ø–æ–∏—Å–∫–∞ –ø–æ —Å–µ—Ä–∏–π–Ω–æ–º—É –Ω–æ–º–µ—Ä—É —Å –ø–æ–∫–∞–∑–æ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    func startSerialNumberSearch() {
        withAnimation(.easeInOut(duration: 0.15)) {
            isSearching = true
            showSelectCategories = false
            searchType = .serialNumber
          
        }
    }
    
    func showCategoriesSelection(for light: Light) {
        withAnimation(.easeInOut(duration: 0.15)) {
            selectedLight = light
            showSelectCategories = true
            print("üìÇ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –ª–∞–º–ø—ã: \(light.metadata.name)")
        }
    }
    
    func hideCategoriesSelection() {
        withAnimation(.easeInOut(duration: 0.15)) {
            showSelectCategories = false
        }
    }
    
    func resetAddBulbState() {
        withAnimation(.easeInOut(duration: 0.15)) {
            isSearching = false
            showSelectCategories = false
            selectedLight = nil
            searchType = .network
        }
    }
}
